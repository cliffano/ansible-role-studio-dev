---
- name: "Get the status of profile file"
  ansible.builtin.stat:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
  register: profile_file

- name: Ensure profile file exists
  ansible.builtin.copy:
    content: ""
    dest: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    mode: '0644'
  when: not profile_file.stat.exists

- name: Ensure SSH config directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.ssh"
    state: directory
    mode: '0755'

- name: Ensure SSH config symlink
  ansible.builtin.file:
    src: "{{ sdev_ssh_config_link_src }}"
    dest: "{{ sdev_home_dir }}/.ssh/{{ sdev_ssh_config_file }}"
    state: link
    force: yes

- name: Ensure SSH private key symlink
  ansible.builtin.file:
    src: "{{ sdev_ssh_private_key_link_src }}"
    dest: "{{ sdev_home_dir }}/.ssh/{{ sdev_sshkey_name }}"
    state: link
    force: yes

- name: Ensure SSH public key symlink
  ansible.builtin.file:
    src: "{{ sdev_ssh_public_key_link_src }}"
    dest: "{{ sdev_home_dir }}/.ssh/{{ sdev_sshkey_name }}.pub"
    state: link
    force: yes

- name: Set gitconfig symlink
  ansible.builtin.file:
    src: "{{ sdev_gitconfig_link_src }}"
    dest: "{{ sdev_home_dir }}/{{ sdev_gitconfig_file }}"
    state: link
    force: yes

- name: Ensure Oh My Zsh directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.oh-my-zsh"
    state: directory
    mode: '0755'

- name: Ensure Oh My Zsh custom directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/custom"
    state: directory
    mode: '0755'

- name: Ensure Oh My Zsh themes directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/themes"
    state: directory
    mode: '0755'

- name: Download Oh My Zsh Bullet Train theme
  ansible.builtin.get_url:
    url: http://raw.github.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme
    dest: "{{ sdev_home_dir }}/.oh-my-zsh/themes/bullet-train.zsh-theme"
    mode: '0644'

- name: Set TERM export (required by Bullet Train theme)
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^export TERM"
    line: "export TERM='xterm-256color'"

- name: "Get the status of Oh My Zsh git aliases custom file"
  ansible.builtin.stat:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/custom/{{ sdev_git_aliases_file }}"
  register: ohmyzsh_gitaliases_file

- name: Ensure Oh My Zsh git aliases custom file exists
  ansible.builtin.copy:
    content: ""
    dest: "{{ sdev_home_dir }}/.oh-my-zsh/custom/{{ sdev_git_aliases_file }}"
    mode: '0644'
  when: not ohmyzsh_gitaliases_file.stat.exists

- name: Create aliases for git commands
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/custom/{{ sdev_git_aliases_file }}"
    state: present
    backup: no
    regexp: "^alias {{ item.key }}="
    line: "alias {{ item.key }}={{ item.value }}"
  loop: "{{ git_aliases | dict2items }}"

- name: Ensure GnuPG directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.gnupg"
    state: directory
    mode: '0755'

- name: "Get the status of GPG agent configuration file"
  ansible.builtin.stat:
    path: "{{ sdev_home_dir }}/.gnupg/{{ sdev_gpgagent_conf_file }}"
  register: gpgagent_conf_file

- name: Ensure GPG agent configuration file exists
  ansible.builtin.copy:
    content: ""
    dest: "{{ sdev_home_dir }}/.gnupg/{{ sdev_gpgagent_conf_file }}"
    mode: '0644'
  when: not gpgagent_conf_file.stat.exists

- name: Set pinentry-program required by git for GPG signing
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/.gnupg/{{ sdev_gpgagent_conf_file }}"
    state: present
    backup: no
    regexp: "^{{ item }}="
    line: "{{ item }}"
  with_items:
    - pinentry-program /usr/local/bin/pinentry-mac
    - default-cache-ttl
    - max-cache-ttl 28800

- name: Ensure global node packages are installed
  community.general.npm:
    name: "{{ item }}"
    global: yes
    state: present
  loop: "{{ sdev_npm_packages }}"
