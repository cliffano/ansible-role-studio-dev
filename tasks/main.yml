---
########################################
# Profile
########################################

- name: "Get the status of profile file"
  ansible.builtin.stat:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
  register: profile_file

- name: Ensure profile file exists
  ansible.builtin.copy:
    content: ""
    dest: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    mode: '0644'
  when: not profile_file.stat.exists

########################################
# Homebrew
########################################

- name: Install Homebrew packages (Mac)
  ansible.builtin.import_role:
    name: geerlingguy.mac.homebrew
  vars:
    homebrew_prefix: /opt/homebrew
    homebrew_installed_packages:
      - colima
      - docker
      - gpg
      - node
      - pinentry-mac
      - python
      - telnet
      - 1password-cli
  when: ansible_facts and 'os_family' in ansible_facts and ansible_facts['os_family'] == 'Darwin'

- name: Add Homebrew bin to PATH
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^export PATH=.*:/opt/homebrew/bin"
    line: "export PATH=$PATH:/opt/homebrew/bin"

########################################
# Workspaces
########################################

- name: Ensure workspace directories exist
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/dev/workspace-{{ item }}"
    state: directory
    mode: '0755'
  loop: "{{ sdev_workspaces }}"

- name: Set goto workspace directory aliases
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^alias {{ item }}="
    line: "alias cd-{{ item }}='cd {{ sdev_home_dir }}/dev/workspace-{{ item }}/'"
  loop: "{{ sdev_workspaces }}"

########################################
# Repoman
########################################

- name: Set Repoman configuration for main workspace repositories
  ansible.builtin.file:
    src: "{{ sdev_repoman_link_src }}/{{ item }}.json"
    dest: "{{ sdev_home_dir }}/dev/workspace-{{ item }}/.repoman.json"
    state: link
    force: yes
  loop: "{{ sdev_workspaces }}"

########################################
# SSH
########################################

- name: Ensure SSH config directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.ssh"
    state: directory
    mode: '0755'

- name: Ensure SSH config symlink
  ansible.builtin.file:
    src: "{{ sdev_ssh_config_link_src }}"
    dest: "{{ sdev_home_dir }}/.ssh/{{ sdev_ssh_config_file }}"
    state: link
    force: yes

- name: Ensure SSH private key symlink
  ansible.builtin.file:
    src: "{{ sdev_ssh_private_key_link_src }}"
    dest: "{{ sdev_home_dir }}/.ssh/{{ sdev_sshkey_name }}"
    state: link
    force: yes

- name: Ensure SSH public key symlink
  ansible.builtin.file:
    src: "{{ sdev_ssh_public_key_link_src }}"
    dest: "{{ sdev_home_dir }}/.ssh/{{ sdev_sshkey_name }}.pub"
    state: link
    force: yes

- name: Set workspaces SSH configuration include
  ansible.builtin.file:
    src: "{{ sdev_ssh_config_workspace_link_src }}/{{ item }}.ssh_config"
    dest: "/etc/ssh/ssh_config.d/config-{{ item }}"
    state: link
    force: yes
  loop: "{{ sdev_workspaces }}"

########################################
# Git
########################################

- name: Set gitconfig symlink
  ansible.builtin.file:
    src: "{{ sdev_gitconfig_link_src }}"
    dest: "{{ sdev_home_dir }}/{{ sdev_gitconfig_file }}"
    state: link
    force: yes

########################################
# Oh My Zsh
# Note: This section requires Oh My Zsh to be installed on userland
#       e.g. by using  gantsign.oh-my-zsh role
########################################

- name: Ensure Oh My Zsh directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.oh-my-zsh"
    state: directory
    mode: '0755'

- name: Ensure Oh My Zsh custom directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/custom"
    state: directory
    mode: '0755'

- name: Ensure Oh My Zsh themes directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/themes"
    state: directory
    mode: '0755'

- name: Download Oh My Zsh Bullet Train theme
  ansible.builtin.get_url:
    url: http://raw.github.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme
    dest: "{{ sdev_home_dir }}/.oh-my-zsh/themes/bullet-train.zsh-theme"
    mode: '0644'

- name: Set TERM export (required by Bullet Train theme)
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^export TERM"
    line: "export TERM='xterm-256color'"

- name: "Get the status of Oh My Zsh git aliases custom file"
  ansible.builtin.stat:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/custom/{{ sdev_git_aliases_file }}"
  register: ohmyzsh_gitaliases_file

- name: Ensure Oh My Zsh git aliases custom file exists
  ansible.builtin.copy:
    content: ""
    dest: "{{ sdev_home_dir }}/.oh-my-zsh/custom/{{ sdev_git_aliases_file }}"
    mode: '0644'
  when: not ohmyzsh_gitaliases_file.stat.exists

- name: Create aliases for git commands
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/.oh-my-zsh/custom/{{ sdev_git_aliases_file }}"
    state: present
    backup: no
    regexp: "^alias {{ item.key }}="
    line: "alias {{ item.key }}='{{ item.value }}'"
  loop: "{{ git_aliases | dict2items }}"

########################################
# GnuPG
########################################

- name: Ensure GnuPG directory exists
  ansible.builtin.file:
    path: "{{ sdev_home_dir }}/.gnupg"
    state: directory
    mode: '0755'

- name: "Get the status of GPG agent configuration file"
  ansible.builtin.stat:
    path: "{{ sdev_home_dir }}/.gnupg/{{ sdev_gpgagent_conf_file }}"
  register: gpgagent_conf_file

- name: Ensure GPG agent configuration file exists
  ansible.builtin.copy:
    content: ""
    dest: "{{ sdev_home_dir }}/.gnupg/{{ sdev_gpgagent_conf_file }}"
    mode: '0644'
  when: not gpgagent_conf_file.stat.exists

- name: Set pinentry-program required by git for GPG signing
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/.gnupg/{{ sdev_gpgagent_conf_file }}"
    state: present
    backup: no
    regexp: "^{{ item }}="
    line: "{{ item }}"
  loop:
    - pinentry-program /usr/local/bin/pinentry-mac
    - default-cache-ttl
    - max-cache-ttl 28800

########################################
# node
########################################

- name: Ensure global node packages are installed
  community.general.npm:
    name: "{{ item }}"
    global: yes
    state: present
  loop: "{{ sdev_npm_packages }}"

########################################
# Docker
########################################

# NOTE: If you hit the error: "Error connecting: Error while fetching server API version'
#       that's because Docker isn't running
#       If you hit additional error: "No such file or directory"
#       that's likely because /var/run/docker.sock isn't initialised
- name: Pull Docker images
  community.docker.docker_image_pull:
    name: "{{ item.image }}"
    pull: not_present
  loop: "{{ sdev_docker_images }}"

- name: Set Docker run aliases
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^alias drn-{{ item.id }}=.*$"
    line: "alias drn-{{ item.id }}='docker run --name {{ item.id }} --env-file {{ item.env_file }} --workdir /opt/workspace -v /var/run/docker.sock:/var/run/docker.sock -v {{ sdev_home_dir }}/.aws:/{{ item.home_dir }}/.aws -v {{ sdev_home_dir }}/.gitconfig:/{{ item.home_dir }}/.gitconfig -v {{ sdev_home_dir }}/.ssh:/{{ item.home_dir }}/.ssh -v `pwd`:/opt/workspace -i -t {{ item.image }}'"
  loop: "{{ sdev_docker_images }}"

- name: Set Docker attach aliases
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^alias dxt-{{ item.id }}=.*$"
    line: "alias dxt-{{ item.id }}='docker exec -it {{ item.id }} {{ item.entrypoint }}'"
  loop: "{{ sdev_docker_images }}"

- name: Set Docker one-off run aliases
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^alias drno-{{ item.id }}=.*$"
    line: "alias drno-{{ item.id }}='docker run --rm --env-file {{ item.env_file }} --workdir /opt/workspace -v /var/run/docker.sock:/var/run/docker.sock -v {{ sdev_home_dir }}/.aws:/{{ item.home_dir }}/.aws -v {{ sdev_home_dir }}/.gitconfig:/{{ item.home_dir }}/.gitconfig -v {{ sdev_home_dir }}/.ssh:/{{ item.home_dir }}/.ssh -v `pwd`:/opt/workspace -i -t {{ item.image }}'"
  loop: "{{ sdev_docker_images }}"

########################################
# Colima
########################################

- name: Set Colima aliases
  ansible.builtin.lineinfile:
    path: "{{ sdev_home_dir }}/{{ sdev_profile_file }}"
    state: present
    backup: no
    regexp: "^alias co5-{{ item }}=.*$"
    line: "alias co5-{{ item }}='rm -f /var/run/docker.sock && ln -s {{ sdev_home_dir }}/.colima/{{ item }}/docker.sock /var/run/docker.sock && colima start {{ item }}'"
  loop: "{{ sdev_colima_networks }}"
